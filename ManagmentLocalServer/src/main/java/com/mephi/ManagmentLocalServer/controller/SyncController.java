package com.mephi.ManagmentLocalServer.controller;


import com.mephi.ManagmentLocalServer.dto.sync.SyncPushRequest;
import com.mephi.ManagmentLocalServer.dto.sync.SyncResponse;
import com.mephi.ManagmentLocalServer.service.SyncService;
import com.mephi.ManagmentLocalServer.service.UserService;
import com.mephi.ManagmentLocalServer.service.SecureNoteService;
import com.mephi.ManagmentLocalServer.service.PasswordEntryService;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

@RestController
@RequestMapping("/sync")
@RequiredArgsConstructor
@Slf4j
@Tag(name = "üîÑ Synchronization", description = "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º")
@SecurityRequirement(name = "Bearer Authentication")
public class SyncController {

    private final SyncService syncService;
    private final UserService userService;
    private final SecureNoteService noteService;
    private final PasswordEntryService passwordService;

    @PostMapping("/push")
    @Operation(
        summary = "–í—ã–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä",
        description = """
            –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä.
            
            **–ü—Ä–æ—Ü–µ—Å—Å:**
            1. –ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã (lastSyncAt = null –∏–ª–∏ updatedAt > lastSyncAt)
            2. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
            3. –ü–æ–ª—É—á–∞–µ—Ç remoteId –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
            4. –û–±–Ω–æ–≤–ª—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Å remoteId –∏ lastSyncAt
            
            **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
            - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–æ–∫–∞–ª—å–Ω–æ (Bearer —Ç–æ–∫–µ–Ω)
            - –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–≤—è–∑–∞–Ω –∞–∫–∫–∞—É–Ω—Ç —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º (remoteId + remoteToken)
            - –£–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω
            """
    )
    @ApiResponses(value = {
        @ApiResponse(
            responseCode = "200",
            description = "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞",
            content = @Content(
                mediaType = "application/json",
                schema = @Schema(implementation = SyncResponse.class),
                examples = @ExampleObject(
                    name = "–£—Å–ø–µ—à–Ω–∞—è –≤—ã–≥—Ä—É–∑–∫–∞",
                    value = """
                        {
                          "success": true,
                          "message": "Successfully pushed data to remote server",
                          "syncTime": "2024-01-15T12:00:00Z",
                          "notesPushed": 3,
                          "passwordsPushed": 5,
                          "notesPulled": 0,
                          "passwordsPulled": 0,
                          "conflicts": 0
                        }
                        """
                )
            )
        ),
        @ApiResponse(responseCode = "401", description = "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"),
        @ApiResponse(responseCode = "400", description = "–ù–µ—Ç —Å–≤—è–∑–∏ —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º")
    })
    public ResponseEntity<SyncResponse> pushToRemote(@Valid @RequestBody SyncPushRequest request) {
        log.info("Push sync request: syncNotes={}, syncPasswords={}, forceSync={}", 
                request.isSyncNotes(), request.isSyncPasswords(), request.isForceSync());
        
        SyncResponse response = syncService.pushToRemote(request);
        return ResponseEntity.ok(response);
    }

    @PostMapping("/pull")
    @Operation(
        summary = "–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞",
        description = """
            –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É.
            
            **–ü—Ä–æ—Ü–µ—Å—Å:**
            1. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
            2. –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ remoteId
            3. –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ
            4. –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏, –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–æ–≤–µ–µ
            5. –†–∞–∑—Ä–µ—à–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            
            **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
            - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–æ–∫–∞–ª—å–Ω–æ (Bearer —Ç–æ–∫–µ–Ω)
            - –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–≤—è–∑–∞–Ω –∞–∫–∫–∞—É–Ω—Ç —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º (remoteId + remoteToken)
            - –£–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω
            """
    )
    @ApiResponses(value = {
        @ApiResponse(
            responseCode = "200",
            description = "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞",
            content = @Content(
                mediaType = "application/json",
                schema = @Schema(implementation = SyncResponse.class),
                examples = @ExampleObject(
                    name = "–£—Å–ø–µ—à–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞",
                    value = """
                        {
                          "success": true,
                          "message": "Successfully pulled data from remote server",
                          "syncTime": "2024-01-15T12:00:00Z",
                          "notesPushed": 0,
                          "passwordsPushed": 0,
                          "notesPulled": 2,
                          "passwordsPulled": 3,
                          "conflicts": 1
                        }
                        """
                )
            )
        ),
        @ApiResponse(responseCode = "401", description = "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"),
        @ApiResponse(responseCode = "400", description = "–ù–µ—Ç —Å–≤—è–∑–∏ —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º")
    })
    public ResponseEntity<SyncResponse> pullFromRemote() {
        log.info("Pull sync request received");
        
        SyncResponse response = syncService.pullFromRemote();
        return ResponseEntity.ok(response);
    }

    @GetMapping("/status")
    @Operation(
        summary = "–°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏",
        description = """
            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏.
            
            **–ü—Ä–æ–≤–µ—Ä—è–µ—Ç:**
            - –í–∫–ª—é—á–µ–Ω–∞ –ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
            - –î–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
            - –°–≤—è–∑–∞–Ω –ª–∏ –∞–∫–∫–∞—É–Ω—Ç —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º
            - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
            """
    )
    @ApiResponses(value = {
        @ApiResponse(
            responseCode = "200",
            description = "–°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω",
            content = @Content(
                mediaType = "application/json",
                examples = @ExampleObject(
                    name = "–°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏",
                    value = """
                        {
                          "syncEnabled": true,
                          "remoteServerAvailable": true,
                          "hasRemoteAccount": true,
                          "unsyncedNotes": 2,
                          "unsyncedPasswords": 1,
                          "lastSyncTime": "2024-01-15T11:30:00Z"
                        }
                        """
                )
            )
        ),
        @ApiResponse(responseCode = "401", description = "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
    })
    public ResponseEntity<Map<String, Object>> getSyncStatus() {
        boolean remoteAvailable = syncService.checkRemoteConnection();
        boolean hasRemoteAccount = false;
        int unsyncedNotes = 0;
        int unsyncedPasswords = 0;
        
        try {
            hasRemoteAccount = userService.hasRemoteAccount();
            unsyncedNotes = noteService.countUnsyncedNotes();
            unsyncedPasswords = passwordService.countUnsyncedPasswords();
        } catch (Exception e) {
            log.warn("Failed to get sync statistics", e);
        }
        
        Map<String, Object> status = Map.of(
            "syncEnabled", true, // –ü–æ–ª—É—á–∏—Ç—å –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            "remoteServerAvailable", remoteAvailable,
            "hasRemoteAccount", hasRemoteAccount,
            "unsyncedNotes", unsyncedNotes,
            "unsyncedPasswords", unsyncedPasswords,
            "canSync", hasRemoteAccount && remoteAvailable
        );
        
        return ResponseEntity.ok(status);
    }
} 